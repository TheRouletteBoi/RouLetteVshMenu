# Jamfile.v2
#
# Copyright (c) 2007-2008
# Steven Watanabe
#
# Distributed under the Boost Software License, Version 1.0. (See
# accomanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt

project units_test :
    requirements <include>$(BOOST_ROOT) <include>../../.. <toolset>msvc:<asynch-exceptions>on
;

check-conversion-dependencies = [ path.glob-tree ../../../boost/units/systems/base_units : *.hpp ] ;
checklibs =
    $(BOOST_ROOT)/libs/regex/build//boost_regex
    $(BOOST_ROOT)/libs/filesystem/build//boost_filesystem
    $(BOOST_ROOT)/libs/system/build//boost_system
;

import testing ;

alias test_framework : $(BOOST_ROOT)/libs/test/build//boost_unit_test_framework ;
#alias test_minimal : $(BOOST_ROOT)/libs/test/build//minimal ;

{
  test-suite units
   :
    [ compile test_predicates.cpp : : ]
    [ compile test_negative_denominator.cpp : : ]
    [ compile test_dimensionless_ice1.cpp : : ]
    [ compile test_dimensionless_ice2.cpp : : ]
    [ compile test_mixed_value_types.cpp : : ]
    [ compile test_complicated_system.cpp : : ]
    [ run test_dimensionless_quantity.cpp : : : : ]
    [ run test_implicit_conversion.cpp : : : : ]
    [ run test_quantity.cpp : : : : ]
    [ run test_unit.cpp : : : : ]
    [ run test_conversion.cpp : : : : ]
    [ run test_base_dimension.cpp : : : : ]
    [ run test_absolute.cpp : : : : ]
    [ run test_default_conversion.cpp : : : : ]
    [ run test_cmath.cpp : : : : ]
    [ run test_limits.cpp : : : : ]
    [ run test_custom_unit.cpp : : : : ]
    [ run test_scaled_conversion.cpp : : : : ]
    [ run test_lambda.cpp : : : : ]
    [ run test_scaled_unit.cpp test_framework : : : : ]
#    [ run check_conversion_defs.cpp $(checklibs) : : : <dependency>$(check-conversion-dependencies) : ]
    [ compile-fail fail_implicit_conversion.cpp : : ]
    [ compile-fail fail_quantity_construct.cpp : : ]
    [ compile-fail fail_quantity_assign.cpp : : ]
    [ compile-fail fail_quantity_add.cpp : : ]
    [ compile-fail fail_quantity_subtract.cpp : : ]
    [ compile-fail fail_quantity_add_assign.cpp : : ]
    [ compile-fail fail_quantity_sub_assign.cpp : : ]
    [ compile-fail fail_quantity_scalar_add.cpp : : ]
    [ compile-fail fail_quantity_scalar_sub.cpp : : ]
    [ compile-fail fail_quantity_unit_add.cpp : : ]
    [ compile-fail fail_quantity_unit_subtract.cpp : : ]
    [ compile-fail fail_scalar_quantity_add.cpp : : ]
    [ compile-fail fail_scalar_quantity_sub.cpp : : ]
    [ compile-fail fail_unit_quantity_add.cpp : : ]
    [ compile-fail fail_unit_quantity_subtract.cpp : : ]
    [ compile-fail fail_adl_detail.cpp : : ]
    [ compile-fail fail_heterogeneous_unit.cpp : : ]
    [ compile-fail fail_base_dimension.cpp : : ]
    [ compile-fail fail_add_temperature.cpp : : ]
    [ compile-fail fail_quantity_non_unit.cpp : : ]
   ;

}
